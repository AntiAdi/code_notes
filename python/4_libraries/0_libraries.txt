A library in Python is essentially a collection of modules (Python files containing reusable code) that provide :
    1. pre-written functions
    2. classes
    3. tools
    to make programming more efficient.

For example:
	1. Instead of writing your own mathematical functions, you can use math.
	2. Instead of manually handling web requests, you can use requests.
	3. Instead of implementing machine learning algorithms, you can use scikit-learn.

Libraries in Python consist of modules, which are just .py files containing functions, classes, and variables.

A library may have one module or multiple modules packaged together.
    Example: The math library is a single module, while numpy contains multiple submodules.


Built-in Libraries (Standard Library)
    Some common built-in libraries: 
        math – Mathematical functions
        random – Random number generation
        os – Interacting with the operating system
        sys – System-specific parameters and functions
        datetime – Date and time manipulation
        json – Working with JSON data

Third-Party Libraries
    They are created by the Python community and need to be installed separately using pip (pip install library_name).

    Some famous third-party libraries:
        numpy – Numerical computing
        pandas – Data manipulation and analysis
        requests – Making HTTP requests
        matplotlib – Data visualization
        tensorflow – Machine learning
        flask – Web development


Importing the Entire Library
    import math

Importing a Specific Function
    from math import sqrt

Importing with an Alias (Shortcut Name) 
    import numpy as np
    print(np.array([1, 2, 3]))

Importing Everything (* is risky)
    from math import *  # Imports all functions


You can search for libraries on:
	PyPI (Python Package Index) – Official repository for Python packages.
	GitHub – Many open-source Python libraries are hosted here.


To check all installed libraries, run:
    pip list

You can create your own library by writing a Python module (.py file) and using it in another script.
    Example:
	    Create a file called mylib.py:
            def greet(name):
                return f"Hello, {name}!"

	    Import and use it in another Python script:
            import mylib
            print(mylib.greet("Alice"))

        To distribute your library, you can upload it to PyPI for others to install using pip install your_library.
